PS D:\Internship\Zidio Internship> & "d:/Internship/Zidio Internship/zidio/Scripts/python.exe" "d:/Internship/Zidio Internship/Digit Recoginition/model_without_optimizer.py"
2024-11-27 10:07:11.146861: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-11-27 10:07:12.474739: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
D:\Internship\Zidio Internship\zidio\Lib\site-packages\keras\src\layers\core\dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(activity_regularizer=activity_regularizer, **kwargs)
2024-11-27 10:07:15.060752: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Epoch 1/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 3s 2ms/step - accuracy: 0.6439 - loss: 1.1641 - val_accuracy: 0.9290 - val_loss: 0.3213
Epoch 2/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.8789 - loss: 0.5006 - val_accuracy: 0.9400 - val_loss: 0.2732
Epoch 3/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9015 - loss: 0.4210 - val_accuracy: 0.9388 - val_loss: 0.2646
Epoch 4/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9131 - loss: 0.3731 - val_accuracy: 0.9511 - val_loss: 0.2206
Epoch 5/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9172 - loss: 0.3454 - val_accuracy: 0.9537 - val_loss: 0.2174
Epoch 6/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9217 - loss: 0.3313 - val_accuracy: 0.9554 - val_loss: 0.2002
Epoch 7/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9258 - loss: 0.3186 - val_accuracy: 0.9549 - val_loss: 0.2117
Epoch 8/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9268 - loss: 0.3092 - val_accuracy: 0.9506 - val_loss: 0.2295
Epoch 9/20
1200/1200 ━━━━━━━━━━━━━━━━━━━━ 2s 2ms/step - accuracy: 0.9300 - loss: 0.2988 - val_accuracy: 0.9534 - val_loss: 0.2205
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Model saved successfully.
313/313 ━━━━━━━━━━━━━━━━━━━━ 1s 1ms/step - accuracy: 0.9473 - loss: 0.2288   
Test accuracy: 0.9556